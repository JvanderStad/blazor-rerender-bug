@page "/"
@using Microsoft.Extensions.Logging;
@inject ILogger<Index> Logger
@code {
    public Date DateComponent1 { get; set; }
    public DateTime? DateValue1 { get; set; } = DateTime.Now;

    public Date DateComponent2 { get; set; }
    public DateTime? DateValue2 { get; set; } = DateTime.Now;

    protected override void OnInitialized()
    {
        Logger.LogWarning("Render Index ('/') page");
    }

    private DateTime RandomDate()
    {
        var rnd = new Random();
        return new DateTime(rnd.Next(1900, 2100), rnd.Next(1, 12), rnd.Next(1, 27));
    }

}

<h3>Description</h3>

<blockquote>
    I have a problem with a Razor component resetting values when the component is wrapped in another component.
    The component works fine when used stand-alone.<br />

    <br />
    The component is a date input control. <br />
    <br />
    To simulate the problem:<br />

    <ol>
        <li>Enter a invalid date value into input #1. Eg. the value 'a'</li>
        <li>You will see the border turn red and the title-attribute will show the parse error</li>
        <li>Enter the same value into input #2</li>
        <li>You will see the value will reset to the original value, due to a redraw of the parent component</li>
    </ol>
</blockquote>

<hr />


<h3>#1. Input</h3>
<div class="sample">

    <!-- Stand alone Component -->
    <Date @ref="DateComponent1"
          @bind-Value="DateValue1" />

    <!-- Button to test binding -->
    <button class="btn btn-primary"
            @onclick="()=>DateValue1=RandomDate()">
        Set random date
    </button>

    <div class="pt-2">
        <!-- Display the bound value -->
        DateValue1: <span class="text-danger">@DateValue1</span>
    </div>

</div>

<hr />


<h3>#2. Input with parent</h3>
<div class="sample">

    <!-- Component is wrapped in a Label component -->
    <Label Title="LabelValue">
        <Date @ref="DateComponent2"
              @bind-Value="DateValue2" />

        <!-- Button to test binding -->
        <button class="btn btn-primary"
                @onclick="()=>DateValue2=RandomDate()">
            Set random date
        </button>
    </Label>

    <div class="pt-2">
        <!-- Display the bound value -->
        DateValue2: <span class="text-danger">@DateValue2</span>
    </div>

</div>
